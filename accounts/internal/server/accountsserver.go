// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: accounts.proto

package server

import (
	"context"

	"accounts/accounts"
	"accounts/internal/logic"
	"accounts/internal/svc"
)

type AccountsServer struct {
	svcCtx *svc.ServiceContext
	accounts.UnimplementedAccountsServer
}

func NewAccountsServer(svcCtx *svc.ServiceContext) *AccountsServer {
	return &AccountsServer{
		svcCtx: svcCtx,
	}
}

func (s *AccountsServer) Ping(ctx context.Context, in *accounts.Request) (*accounts.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *AccountsServer) Register(ctx context.Context, in *accounts.RegisterRequest) (*accounts.TokenResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *AccountsServer) Login(ctx context.Context, in *accounts.LoginRequest) (*accounts.TokenResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *AccountsServer) Refresh(ctx context.Context, in *accounts.RefreshRequest) (*accounts.RefreshResponse, error) {
	l := logic.NewRefreshLogic(ctx, s.svcCtx)
	return l.Refresh(in)
}

func (s *AccountsServer) Validate(ctx context.Context, in *accounts.ValidateRequest) (*accounts.ValidateResponse, error) {
	l := logic.NewValidateLogic(ctx, s.svcCtx)
	return l.Validate(in)
}

func (s *AccountsServer) ChangePassword(ctx context.Context, in *accounts.ChangePasswordRequest) (*accounts.ChangePasswordResponse, error) {
	l := logic.NewChangePasswordLogic(ctx, s.svcCtx)
	return l.ChangePassword(in)
}
