// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: organizations.proto

package organizationsclient

import (
	"context"

	"github.com/tempest-org/tempest/organizations/organizations"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AcceptInvitationRequest        = organizations.AcceptInvitationRequest
	AcceptInvitationResponse       = organizations.AcceptInvitationResponse
	CreateOrganizationRequest      = organizations.CreateOrganizationRequest
	CreateOrganizationResponse     = organizations.CreateOrganizationResponse
	DeleteOrganizationRequest      = organizations.DeleteOrganizationRequest
	DeleteOrganizationResponse     = organizations.DeleteOrganizationResponse
	GetInvitationsRequest          = organizations.GetInvitationsRequest
	GetInvitationsResponse         = organizations.GetInvitationsResponse
	GetOrganizationMembersRequest  = organizations.GetOrganizationMembersRequest
	GetOrganizationMembersResponse = organizations.GetOrganizationMembersResponse
	GetOrganizationRequest         = organizations.GetOrganizationRequest
	GetOrganizationResponse        = organizations.GetOrganizationResponse
	GetUserOrganizationsRequest    = organizations.GetUserOrganizationsRequest
	GetUserOrganizationsResponse   = organizations.GetUserOrganizationsResponse
	InviteMemberRequest            = organizations.InviteMemberRequest
	InviteMemberResponse           = organizations.InviteMemberResponse
	ListOrganizationsRequest       = organizations.ListOrganizationsRequest
	ListOrganizationsResponse      = organizations.ListOrganizationsResponse
	Organization                   = organizations.Organization
	OrganizationInvitation         = organizations.OrganizationInvitation
	OrganizationMember             = organizations.OrganizationMember
	RemoveMemberRequest            = organizations.RemoveMemberRequest
	RemoveMemberResponse           = organizations.RemoveMemberResponse
	UpdateOrganizationRequest      = organizations.UpdateOrganizationRequest
	UpdateOrganizationResponse     = organizations.UpdateOrganizationResponse

	Organizations interface {
		// Organization operations
		CreateOrganization(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*CreateOrganizationResponse, error)
		GetOrganization(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*GetOrganizationResponse, error)
		UpdateOrganization(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*UpdateOrganizationResponse, error)
		DeleteOrganization(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*DeleteOrganizationResponse, error)
		ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error)
		// Member operations
		InviteMember(ctx context.Context, in *InviteMemberRequest, opts ...grpc.CallOption) (*InviteMemberResponse, error)
		AcceptInvitation(ctx context.Context, in *AcceptInvitationRequest, opts ...grpc.CallOption) (*AcceptInvitationResponse, error)
		RemoveMember(ctx context.Context, in *RemoveMemberRequest, opts ...grpc.CallOption) (*RemoveMemberResponse, error)
		GetOrganizationMembers(ctx context.Context, in *GetOrganizationMembersRequest, opts ...grpc.CallOption) (*GetOrganizationMembersResponse, error)
		GetInvitations(ctx context.Context, in *GetInvitationsRequest, opts ...grpc.CallOption) (*GetInvitationsResponse, error)
		// User-specific operations
		GetUserOrganizations(ctx context.Context, in *GetUserOrganizationsRequest, opts ...grpc.CallOption) (*GetUserOrganizationsResponse, error)
	}

	defaultOrganizations struct {
		cli zrpc.Client
	}
)

func NewOrganizations(cli zrpc.Client) Organizations {
	return &defaultOrganizations{
		cli: cli,
	}
}

// Organization operations
func (m *defaultOrganizations) CreateOrganization(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*CreateOrganizationResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.CreateOrganization(ctx, in, opts...)
}

func (m *defaultOrganizations) GetOrganization(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*GetOrganizationResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.GetOrganization(ctx, in, opts...)
}

func (m *defaultOrganizations) UpdateOrganization(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*UpdateOrganizationResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.UpdateOrganization(ctx, in, opts...)
}

func (m *defaultOrganizations) DeleteOrganization(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*DeleteOrganizationResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.DeleteOrganization(ctx, in, opts...)
}

func (m *defaultOrganizations) ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.ListOrganizations(ctx, in, opts...)
}

// Member operations
func (m *defaultOrganizations) InviteMember(ctx context.Context, in *InviteMemberRequest, opts ...grpc.CallOption) (*InviteMemberResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.InviteMember(ctx, in, opts...)
}

func (m *defaultOrganizations) AcceptInvitation(ctx context.Context, in *AcceptInvitationRequest, opts ...grpc.CallOption) (*AcceptInvitationResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.AcceptInvitation(ctx, in, opts...)
}

func (m *defaultOrganizations) RemoveMember(ctx context.Context, in *RemoveMemberRequest, opts ...grpc.CallOption) (*RemoveMemberResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.RemoveMember(ctx, in, opts...)
}

func (m *defaultOrganizations) GetOrganizationMembers(ctx context.Context, in *GetOrganizationMembersRequest, opts ...grpc.CallOption) (*GetOrganizationMembersResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.GetOrganizationMembers(ctx, in, opts...)
}

func (m *defaultOrganizations) GetInvitations(ctx context.Context, in *GetInvitationsRequest, opts ...grpc.CallOption) (*GetInvitationsResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.GetInvitations(ctx, in, opts...)
}

// User-specific operations
func (m *defaultOrganizations) GetUserOrganizations(ctx context.Context, in *GetUserOrganizationsRequest, opts ...grpc.CallOption) (*GetUserOrganizationsResponse, error) {
	client := organizations.NewOrganizationsClient(m.cli.Conn())
	return client.GetUserOrganizations(ctx, in, opts...)
}
