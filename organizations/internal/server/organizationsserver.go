// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: organizations.proto

package server

import (
	"context"

	"github.com/tempest-org/tempest/organizations/internal/logic"
	"github.com/tempest-org/tempest/organizations/internal/svc"
	"github.com/tempest-org/tempest/organizations/organizations"
)

type OrganizationsServer struct {
	svcCtx *svc.ServiceContext
	organizations.UnimplementedOrganizationsServer
}

func NewOrganizationsServer(svcCtx *svc.ServiceContext) *OrganizationsServer {
	return &OrganizationsServer{
		svcCtx: svcCtx,
	}
}

// Organization operations
func (s *OrganizationsServer) CreateOrganization(ctx context.Context, in *organizations.CreateOrganizationRequest) (*organizations.CreateOrganizationResponse, error) {
	l := logic.NewCreateOrganizationLogic(ctx, s.svcCtx)
	return l.CreateOrganization(in)
}

func (s *OrganizationsServer) GetOrganization(ctx context.Context, in *organizations.GetOrganizationRequest) (*organizations.GetOrganizationResponse, error) {
	l := logic.NewGetOrganizationLogic(ctx, s.svcCtx)
	return l.GetOrganization(in)
}

func (s *OrganizationsServer) UpdateOrganization(ctx context.Context, in *organizations.UpdateOrganizationRequest) (*organizations.UpdateOrganizationResponse, error) {
	l := logic.NewUpdateOrganizationLogic(ctx, s.svcCtx)
	return l.UpdateOrganization(in)
}

func (s *OrganizationsServer) DeleteOrganization(ctx context.Context, in *organizations.DeleteOrganizationRequest) (*organizations.DeleteOrganizationResponse, error) {
	l := logic.NewDeleteOrganizationLogic(ctx, s.svcCtx)
	return l.DeleteOrganization(in)
}

func (s *OrganizationsServer) ListOrganizations(ctx context.Context, in *organizations.ListOrganizationsRequest) (*organizations.ListOrganizationsResponse, error) {
	l := logic.NewListOrganizationsLogic(ctx, s.svcCtx)
	return l.ListOrganizations(in)
}

// Member operations
func (s *OrganizationsServer) InviteMember(ctx context.Context, in *organizations.InviteMemberRequest) (*organizations.InviteMemberResponse, error) {
	l := logic.NewInviteMemberLogic(ctx, s.svcCtx)
	return l.InviteMember(in)
}

func (s *OrganizationsServer) AcceptInvitation(ctx context.Context, in *organizations.AcceptInvitationRequest) (*organizations.AcceptInvitationResponse, error) {
	l := logic.NewAcceptInvitationLogic(ctx, s.svcCtx)
	return l.AcceptInvitation(in)
}

func (s *OrganizationsServer) RemoveMember(ctx context.Context, in *organizations.RemoveMemberRequest) (*organizations.RemoveMemberResponse, error) {
	l := logic.NewRemoveMemberLogic(ctx, s.svcCtx)
	return l.RemoveMember(in)
}

func (s *OrganizationsServer) GetOrganizationMembers(ctx context.Context, in *organizations.GetOrganizationMembersRequest) (*organizations.GetOrganizationMembersResponse, error) {
	l := logic.NewGetOrganizationMembersLogic(ctx, s.svcCtx)
	return l.GetOrganizationMembers(in)
}

func (s *OrganizationsServer) GetInvitations(ctx context.Context, in *organizations.GetInvitationsRequest) (*organizations.GetInvitationsResponse, error) {
	l := logic.NewGetInvitationsLogic(ctx, s.svcCtx)
	return l.GetInvitations(in)
}

// User-specific operations
func (s *OrganizationsServer) GetUserOrganizations(ctx context.Context, in *organizations.GetUserOrganizationsRequest) (*organizations.GetUserOrganizationsResponse, error) {
	l := logic.NewGetUserOrganizationsLogic(ctx, s.svcCtx)
	return l.GetUserOrganizations(in)
}
